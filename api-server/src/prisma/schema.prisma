generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String         @id @default(uuid())
    username      String         @unique @map("user_id")
    phonenumber   String
    email         String
    password      String
    avatarUrl     String?
    inrBalances   InrBalance[]
    stockBalances StockBalance[]
    orderList     Order[]
}

model InrBalance {
    id      Int    @id @default(autoincrement())
    user    User   @relation(fields: [userId], references: [id])
    userId  String @unique
    balance Float
    locked  Float
}

model StockBalance {
    id          Int    @id @default(autoincrement())
    user        User   @relation(fields: [userId], references: [id])
    userId      String
    market      Market @relation(fields: [marketId], references: [id])
    marketId    String
    yesQuantity Int
    yesLocked   Int
    noQuantity  Int
    noLocked    Int
}

model Market {
    id           String         @id @default(uuid())
    stockSymbol  String         @default("")
    description  String
    startTime    DateTime
    endTime      DateTime
    result       StockType?
    thumbnail    String?
    category     Category       @relation(fields: [categoryId], references: [id])
    categoryId   String
    categoryType String
    StockBalance StockBalance[]
    Order        Order[]

    @@map("markets")
}

model Order {
    id         String      @id @default(uuid())
    market     Market      @relation(fields: [marketId], references: [id])
    marketId   String
    user       User        @relation(fields: [userId], references: [id])
    userId     String
    stockType  StockType
    createdAt  DateTime    @default(now())
    quantity   Int
    price      Float
    orderType  String
    totalPrice Float
    status     OrderStatus
}

enum StockType {
    yes
    no
}

enum OrderStatus {
    executed
    pending
}

model Category {
    id           String   @id @default(uuid())
    categoryName String
    icon         String?
    markets      Market[]
}
